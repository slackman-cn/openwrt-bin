# This is a basic workflow to help you get started with Actions

name: builder-armv8

# Controls when the workflow will run
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# PROFILE="friendlyarm_nanopi-r5s"
# PACKAGES="luci git git-gitweb git-http perl-uri"
env:
  WRT_VERSION: "24.10.0"
  WRT_TARGET: "24.10.0-rockchip-armv8"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y language-pack-en build-essential wget zstd tree
          wget https://downloads.openwrt.org/releases/${WRT_VERSION}/targets/rockchip/armv8/openwrt-imagebuilder-${WRT_TARGET}.Linux-x86_64.tar.zst
          zstd -d openwrt-imagebuilder-${WRT_TARGET}.Linux-x86_64.tar.zst
          tar -xf openwrt-imagebuilder-${WRT_TARGET}.Linux-x86_64.tar

      - name: Build Image
        run: |
          cd openwrt-imagebuilder-${WRT_TARGET}.Linux-x86_64
          make help
          make info 
          make image PROFILE="friendlyarm_nanopi-r5s" PACKAGES="luci git git-gitweb git-http perl-uri"

      - name: Output
        run: |
          cd ${{github.workspace}}
          ls -lh 
          ls -lh openwrt-imagebuilder-${WRT_TARGET}.Linux-x86_64
          mv openwrt-imagebuilder-${WRT_TARGET}.Linux-x86_64/bin/targets .

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: targets-armv8
          path: ${{github.workspace}}/targets/rockchip/armv8/*.img.gz
